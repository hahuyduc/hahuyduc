using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using QUANLYKHACHSAN.BUS;
using QUANLYKHACHSAN.Object;
using DevExpress.XtraGrid.Views.Grid;

namespace QUANLYKHACHSAN.PresentationLayers
{
    public partial class frmThemDichVu : Form
    {
        public frmThemDichVu()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
        }

        private void frmThemDichVu_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'qLKSDataSet.DICHVU' table. You can move, or remove it, as needed.
            txtMaDV.Text = DichVuBUS.XuLyMa();
            dichvuTableAdapter1.Fill(qlksDataSet1.DICHVU);
        }

        private Boolean KiemTra()
        {
            if (txtTenDV.Text == "" || txtGiaDV.Text == "")
            {
                MessageBox.Show("Xin nhập đầy đủ thông tin!", "thông báo", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
                return false;
            }
            return true;
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            try
            {
                if (KiemTra())
                {
                    try
                    {
                        DichVu dv = new DichVu();
                        dv.MaDV = DichVuBUS.XuLyMa();
                        dv.TenDV = txtTenDV.Text;
                        dv.MoTa = txtMoTa.Text;
                        dv.GiaDV = txtGiaDV.Text;
                        DichVuBUS.Insert(dv);
                        frmThemDichVu_Load(sender, e);
                        MessageBox.Show("Thêm thành công.", "Thông báo");

                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                }
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private Boolean KiemTraMa()
        {
            string tam = DichVuBUS.XuLyMa();
            if(Convert.ToInt32(txtMaDV.Text.Substring(2)) >= Convert.ToInt32(tam.Substring(2)))
            {
                MessageBox.Show("Phiếu này chưa đăng ký!", "thông báo", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
                return false;
            }

            return true;
        }

        private void btnChinhSua_Click(object sender, EventArgs e)
        {
            try
            {
                if (KiemTraMa() && KiemTra())
                {
                    try
                    {
                        DichVu dv = new DichVu();
                        dv.MaDV = txtMaDV.Text;
                        dv.TenDV = txtTenDV.Text;
                        dv.MoTa = txtMoTa.Text;
                        dv.GiaDV = txtGiaDV.Text;
                        DichVuBUS.Update(dv);
                        frmThemDichVu_Load(sender, e);
                        MessageBox.Show("Chỉnh sửa thành công.", "Thông báo");

                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
 
        }

        private void btnNhapLai_Click(object sender, EventArgs e)
        {
            txtMaDV.Text = DichVuBUS.XuLyMa();
            txtTenDV.ResetText();
            txtMoTa.ResetText();
            txtGiaDV.ResetText();
            frmThemDichVu_Load(sender, e);
            txtTenDV.Select();
        }

        private void btnXoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {

                if (MessageBox.Show("Bạn có chắc chắn muốn xóa?", "Thông Báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {

                    DichVuBUS.Delete(gridView1.GetFocusedRowCellValue(colMaDV).ToString());
                    frmThemDichVu_Load(sender, e);
                    MessageBox.Show("Xóa Thành Công!");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btnLuu_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                DichVu dv = new DichVu();
                dv.MaDV = gridView1.GetFocusedRowCellValue(colMaDV).ToString();
                dv.TenDV = gridView1.GetFocusedRowCellValue(colTenDichVu).ToString();
                dv.GiaDV = gridView1.GetFocusedRowCellValue(colGiaDichVu).ToString();
                dv.MoTa = gridView1.GetFocusedRowCellValue(colMoTa).ToString();
                DichVuBUS.Update(dv);
                frmThemDichVu_Load(sender, e);
                MessageBox.Show("Chỉnh sửa thành công.", "Thông báo");
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

        }

        private void gridView1_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            txtMaDV.EditValue = gridView1.GetFocusedRowCellDisplayText(colMaDV);
            txtTenDV.EditValue = gridView1.GetFocusedRowCellDisplayText(colTenDichVu);
            txtGiaDV.EditValue = gridView1.GetFocusedRowCellDisplayText(colGiaDichVu);
            txtMoTa.EditValue = gridView1.GetFocusedRowCellDisplayText(colMoTa);
        }  
    }
}
