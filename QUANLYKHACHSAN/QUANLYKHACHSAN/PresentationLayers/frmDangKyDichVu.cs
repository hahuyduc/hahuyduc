using DevExpress.XtraEditors.Controls;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using QUANLYKHACHSAN.Object;
using QUANLYKHACHSAN.BUS;

namespace QUANLYKHACHSAN.PresentationLayers
{
    public partial class frmDangKyDichVu : Form
    {
        PhieuDichVu pdv = new PhieuDichVu();
        ChiTietPDV ct_pdv = new ChiTietPDV();
        private string MaNV;
        public frmDangKyDichVu()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard

            // This line of code is generated by Data Source Configuration Wizard
            chiTiet_PDVTableAdapter1.Fill(qlksDataSet1.ChiTiet_PDV);
            // This line of code is generated by Data Source Configuration Wizard
            
        }

        public frmDangKyDichVu(string MaNV)
        {
            // TODO: Complete member initialization
            this.MaNV = MaNV;
            InitializeComponent();
           
            chiTiet_PDVTableAdapter1.Fill(qlksDataSet1.ChiTiet_PDV);
           
        }

        public void LoadData()
        {
            try
            {
                cbxTenDichVu.Properties.PopulateColumns();
                cbxTenDichVu.ItemIndex = 0;

                cbxMaPhong.Properties.PopulateColumns();
                cbxMaPhong.ItemIndex = 0;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            
        }

        private void frmDangKyDichVu_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'qlksDataSet1.PHONG' table. You can move, or remove it, as needed.
            this.pHONGTableAdapter.FillBy(this.qlksDataSet1.PHONG);
            // TODO: This line of code loads data into the 'qlksDataSet1.DICHVU' table. You can move, or remove it, as needed.
            this.dICHVUTableAdapter.Fill(this.qlksDataSet1.DICHVU);
            LoadData();
        }

        private void ThemPhieuDichVu()
        {
            
            pdv.MaPDV = PhieuDichVuBUS.XuLyMa();
            pdv.MaPDK = txtMaPDK.Text;
            pdv.MaPhong = cbxMaPhong.Text;
            pdv.MaNV = this.MaNV;
            pdv.TongTien = 0;
            PhieuDichVuBUS.Insert(pdv);
            LoadPhieuDichVu(txtMaPDK.Text,cbxMaPhong.Text);
        }

        private void btnDangKyDV_Click(object sender, EventArgs e)
        {
            try
            {
                if (cbxMaPDV.Text == "")
                {
                    ThemPhieuDichVu();
                    ct_pdv.MaPDV = pdv.MaPDV;
                }
                else ct_pdv.MaPDV = (string)cbxMaPDV.EditValue;
                
                ct_pdv.MaDV = (string)cbxTenDichVu.EditValue;
                ct_pdv.MaCTPDV = ChiTietPDV_BUS.XuLyMa();
                
                ct_pdv.SoLuong = int.Parse(txtSoLuong.Text);
                ChiTietPDV_BUS.Insert(ct_pdv);
                LoadGridView(cbxMaPDV.Text);
                MessageBox.Show("Thêm dịch vụ thành công", "Thông báo");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void LoadPhieuDichVu(string maPDK, string maPhong)
        {
            try
            {
                cbxMaPDV.Properties.DataSource = PhieuDichVuBUS.SearchByMaPDK(maPDK,maPhong);
                cbxMaPDV.Properties.DisplayMember = "MaPDV";
                cbxMaPDV.Properties.ValueMember = "MaPDV";
                cbxMaPDV.ItemIndex = 0;
                LoadGridView(cbxMaPDV.Text);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            
        }
        private void LoadGridView(string maPDV)
        {
            try
            {
                chiTiet_PDVTableAdapter1.FillBy(qlksDataSet1.ChiTiet_PDV, maPDV);
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        private void cbxMaPhong_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                DataTable dt = PhieuDichVuBUS.ThongTinPhong(cbxMaPhong.Text);
                txtHoTen.Text = dt.Rows[0]["TenKH"].ToString();
                txtMaPDK.Text = dt.Rows[0]["MaPDK"].ToString();
                LoadPhieuDichVu(txtMaPDK.Text,cbxMaPhong.Text);
                LoadGridView(cbxMaPDV.Text);
                
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void cbxMaPDV_EditValueChanged(object sender, EventArgs e)
        {
            LoadGridView((string)cbxMaPDV.EditValue);
        }

        private void txtSoLuong_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsDigit(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private bool KiemTra()
        {
            if(cbxMaPDV.Text =="")
            {
                MessageBox.Show("Không có phiếu dịch vụ", "Thông báo", MessageBoxButtons.OKCancel);
                return false;
            }
            return true;
        }
        private void btnLuu_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                if (KiemTra())
                {
                    ct_pdv.MaCTPDV = gridView1.GetFocusedRowCellDisplayText(colMaCTPDV);
                    ct_pdv.MaDV = (string)cbxTenDichVu.EditValue;
                    ct_pdv.MaPDV = cbxMaPDV.Text;
                    ct_pdv.SoLuong = int.Parse(txtSoLuong.Text);
                    ChiTietPDV_BUS.Update(ct_pdv);
                    LoadGridView(ct_pdv.MaPDV);
                    MessageBox.Show("Sửa dịch vụ thành công", "Thông báo");
                }
                
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);   
            }
        }

        private void btnXoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                if(KiemTra())
                {
                    if(gridView1.DataRowCount == 0)
                    {
                        PhieuDichVuBUS.Delete(cbxMaPDV.Text);
                        LoadPhieuDichVu(txtMaPDK.Text, cbxMaPhong.Text);
                        MessageBox.Show("Xóa phiếu dịch vụ thành công", "Thông báo");
                    }
                    else 
                    {
                        ChiTietPDV_BUS.Delete(gridView1.GetFocusedRowCellDisplayText(colMaCTPDV));
                        MessageBox.Show("Xóa chi tiết phiếu thành công", "Thông báo");
                    }
                    LoadGridView(cbxMaPDV.Text);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void gridView1_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            txtSoLuong.Text = gridView1.GetFocusedRowCellDisplayText(colSoLuong);
            cbxTenDichVu.EditValue = gridView1.GetFocusedRowCellValue(colMaDV);
        }

    }
}
