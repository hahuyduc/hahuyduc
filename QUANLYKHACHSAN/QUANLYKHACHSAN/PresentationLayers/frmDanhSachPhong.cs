using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using QUANLYKHACHSAN.BUS;
using QUANLYKHACHSAN.Object;
using DevExpress.XtraEditors.Controls;

namespace QUANLYKHACHSAN.PresentationLayers
{
    public partial class frmDanhSachPhong : Form
    {
        public frmDanhSachPhong()
        {
            InitializeComponent();
            //LoadData();
        }

        private void frmDanhSachPhong_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'qLKSDataSet.LOAIPHONG' table. You can move, or remove it, as needed.
            gridControl1.DataSource = PhongBUS.GetAll();
            lOAIPHONGTableAdapter.Fill(qLKSDataSet.LOAIPHONG);
            luLoaiPhong.Properties.DataSource = qLKSDataSet.LOAIPHONG;
            luLoaiPhong.Properties.DisplayMember = "MaLP";
            luLoaiPhong.Properties.ValueMember = "TenLP";

            luLoaiPhong.Properties.PopulateColumns();
            luLoaiPhong.Properties.Columns.Add(new LookUpColumnInfo("MaLP"));
            luLoaiPhong.Properties.Columns.Add(new LookUpColumnInfo("TenLP"));
            luLoaiPhong.ItemIndex = 0;
        }
        private void LoadData()
        {
            // This line of code is generated by Data Source Configuration Wizard
            
           
        }

        private Boolean KiemTra()
        {
            if (txtTenPhong.Text == "" || txtSDTPhong.Text == "" || luLoaiPhong.Text == "")
            {
                MessageBox.Show("Xin nhập đầy đủ thông tin!", "thông báo", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
                return false;
            }

            return true;
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            if (KiemTra())
            {
                try
                {
                    Phong phong = new Phong();
                    phong.MaPhong = txtTenPhong.Text;
                    phong.SDTPhong = txtSDTPhong.Text;
                    phong.MaLP = luLoaiPhong.Text;
                    PhongBUS.Insert(phong);
                    LoadData();
                    MessageBox.Show("Thêm thành công.", "Thông báo");
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }

        private void btnChinhSua_Click(object sender, EventArgs e)
        {
            if (KiemTra())
            {
                try
                {
                    Phong phong = new Phong();
                    phong.MaPhong = txtTenPhong.Text;
                    phong.SDTPhong = txtSDTPhong.Text;
                    phong.MaLP = LoaiPhongBUS.FindMaLP(luLoaiPhong.Text);
                    PhongBUS.Update(phong);
                    LoadData();
                    MessageBox.Show("Thêm thành công.", "Thông báo");
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }
        private void btnNhapLai_Click(object sender, EventArgs e)
        {
            txtTenPhong.ResetText();
            txtSDTPhong.ResetText();
            txtTenPhong.Properties.ReadOnly = false;
            txtTenPhong.Select();
        }

        private void btnInDanhSach_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaveFileDialog saveFileDialog1 = new SaveFileDialog();
            saveFileDialog1.Filter = "File PDF|*.pdf|Excel|*.xls|Text rtf|*.rtf";
            saveFileDialog1.Title = "Xuất danh sách loại phòng";
            if (saveFileDialog1.ShowDialog() == DialogResult.OK)
            {
                if (saveFileDialog1.FilterIndex == 1)
                    gridView1.ExportToPdf(saveFileDialog1.FileName);
                if (saveFileDialog1.FilterIndex == 2)
                    gridControl1.ExportToXls(saveFileDialog1.FileName);
                if (saveFileDialog1.FilterIndex == 3)
                    gridControl1.ExportToRtf(saveFileDialog1.FileName);
            }
        }

        private void btnXoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {

                if (MessageBox.Show("Bạn có chắc chắn muốn xóa?", "Thông Báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    PhongBUS.Delete(gridView1.GetFocusedRowCellValue(colMaPhong).ToString());
                    LoadData();
                    MessageBox.Show("Xóa Thành Công!");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btnLuu_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                Phong phong = new Phong();
                phong.MaPhong = gridView1.GetFocusedRowCellValue(colMaPhong).ToString();
                phong.SDTPhong = gridView1.GetFocusedRowCellValue(colSDT).ToString();
                phong.MaLP = gridView1.GetFocusedRowCellValue(ColMaLP).ToString();
                PhongBUS.Update(phong);
                LoadData();
                MessageBox.Show("Lưu thành công.", "Thông báo");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        private void gridView1_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            txtTenPhong.EditValue = gridView1.GetFocusedRowCellDisplayText(colMaPhong);
            txtSDTPhong.EditValue = gridView1.GetFocusedRowCellDisplayText(colSDT);
            luLoaiPhong.Text = gridView1.GetFocusedRowCellDisplayText(ColMaLP);
        }

       

    }
}
